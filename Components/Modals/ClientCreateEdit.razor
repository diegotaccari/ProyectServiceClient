@using ProyectServiceClient.Models

<div class="modal @ModalClass" tabindex="-1" style="display:@ModalDisplay">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="@Client" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="nombre" class="form-label">Nombre</label>
                        <InputText id="nombre" class="form-control" @bind-Value="Client.Nombre" />
                    </div>
                    <div class="mb-3">
                        <label for="apellido" class="form-label">Apellido</label>
                        <InputText id="apellido" class="form-control" @bind-Value="Client.Apellido" />
                    </div>
                    <div class="mb-3">
                        <label for="telefono" class="form-label">Tel√©fono</label>
                        <InputText id="telefono" class="form-control" @bind-Value="Client.Telefono" />
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="Close">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public EventCallback<ProyectServiceClient.Models.Client> OnSave { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private ProyectServiceClient.Models.Client Client { get; set; } = new ProyectServiceClient.Models.Client();
    private string Title { get; set; } = "";
    private bool ShowModal { get; set; }
    private string ModalDisplay => ShowModal ? "block" : "none";
    private string ModalClass => ShowModal ? "show" : "";
    private bool ShowBackdrop => ShowModal;

    public void Show(string title, ProyectServiceClient.Models.Client client)
    {
        Title = title;
        Client = client;
        ShowModal = true;
        StateHasChanged();
    }

    private void Close()
    {
        ShowModal = false;
        OnClose.InvokeAsync();
    }

    private async Task HandleValidSubmit()
    {
        await OnSave.InvokeAsync(Client);
        ShowModal = false;
    }
}






